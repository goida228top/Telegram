
#!/bin/bash
set -e # Останавливать скрипт при любой ошибке

# --- НАСТРОЙКИ ---
DOMAIN="rugram.duckdns.org"
EMAIL="romanovroma1337@gmail.com" # ВАЖНО: Укажите ваш настоящий email
GIT_REPO="https://github.com/goida228top/Telegram"
PROJECT_DIR="/opt/rugram"
MEDIA_SERVER_PORT="3001"
# Диапазон портов для медиатрафика Mediasoup (UDP)
MEDIASOUP_PORT_RANGE="10000:10100"

echo "--- [Шаг 1/6] Очистка и настройка файрвола ---"
# Полная очистка PM2 для избежания конфликтов
echo "-> Полностью очищаем PM2..."
pm2 delete all || true
pm2 save --force

# Настройка файрвола (UFW) - КРИТИЧЕСКИ ВАЖНО для WebRTC
echo "-> Настраиваем файрвол (UFW)..."
apt-get install -y ufw
ufw default deny incoming
ufw default allow outgoing
ufw allow ssh       # Важно, чтобы не потерять доступ
ufw allow http      # 80
ufw allow https     # 443
ufw allow ${MEDIASOUP_PORT_RANGE}/udp # Порты для Mediasoup
ufw --force enable
echo "-> Правила файрвола обновлены. Открыты порты: SSH, HTTP, HTTPS, ${MEDIASOUP_PORT_RANGE}/udp."

echo "--- [Шаг 2/6] Установка/обновление программ ---"
apt-get update
apt-get install -y git nginx python3 build-essential curl certbot python3-certbot-nginx

# Устанавливаем Node.js v20, если не установлен
if ! command -v node &> /dev/null || [[ $(node -v) != v20* ]]; then
    curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -
    apt-get install -y nodejs
fi
npm install pm2 -g # Устанавливаем PM2 глобально

echo "--- [Шаг 3/6] Загрузка и сборка проекта ---"
if [ -d "$PROJECT_DIR" ]; then
    echo "-> Обновляем проект из GitHub..."
    cd "$PROJECT_DIR"
    git reset --hard
    git pull
else
    echo "-> Клонируем проект из GitHub..."
    git clone "$GIT_REPO" "$PROJECT_DIR"
    cd "$PROJECT_DIR"
fi

echo "-> Устанавливаем зависимости..."
npm install

echo "-> Собираем фронтенд..."
npm run build

echo "--- [Шаг 4/6] Настройка Nginx и SSL ---"
# Финальный конфиг Nginx
cat > /etc/nginx/sites-available/rugram <<EOF
server {
    listen 80;
    server_name $DOMAIN;

    # Для проверки Certbot
    location /.well-known/acme-challenge/ {
        root /var/www/html;
    }

    location / {
        return 301 https://\$host\$request_uri;
    }
}
EOF
ln -s -f /etc/nginx/sites-available/rugram /etc/nginx/sites-enabled/
mkdir -p /var/www/html
systemctl restart nginx

echo "-> Получаем/обновляем SSL-сертификат..."
certbot --nginx -d $DOMAIN --non-interactive --agree-tos -m $EMAIL --redirect

# Перезаписываем конфиг после Certbot, чтобы добавить прокси
cat > /etc/nginx/sites-available/rugram <<EOF
server {
    server_name $DOMAIN;
    root $PROJECT_DIR; # Указываем на корень проекта
    index index.html;

    location / {
        try_files \$uri /index.html;
    }

    # Прямой прокси на сервер для Socket.IO
    location /socket.io/ {
        proxy_pass http://127.0.0.1:$MEDIA_SERVER_PORT;
        proxy_http_version 1.1;
        proxy_set_header Upgrade \$http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host \$host;
    }

    listen 443 ssl http2;
    ssl_certificate /etc/letsencrypt/live/$DOMAIN/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/$DOMAIN/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
}

server {
    if (\$host = $DOMAIN) {
        return 301 https://\$host\$request_uri;
    }
    listen 80;
    server_name $DOMAIN;
    return 404;
}
EOF
systemctl restart nginx
echo "-> Nginx настроен."

echo "--- [Шаг 5/6] Запуск медиа-сервера ---"
cd "$PROJECT_DIR"

echo "-> Определяем публичный IP-адрес..."
PUBLIC_IP=$(curl -s --max-time 5 ifconfig.me || curl -s --max-time 5 icanhazip.com)

if [[ ! "$PUBLIC_IP" =~ ^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
  echo "!!! ВНИМАНИЕ: Не удалось автоматически определить IP-адрес. Аудио и видео работать НЕ БУДУТ."
  export MEDIASOUP_ANNOUNCED_IP=""
else
  echo "--- Медиа-сервер будет использовать публичный IP: $PUBLIC_IP ---"
  export MEDIASOUP_ANNOUNCED_IP=$PUBLIC_IP
fi

# Запускаем server.js из папки проекта
pm2 start server.js --name "rugram-media-server" --update-env
pm2 save
echo "-> Медиа-сервер запущен через PM2."

echo "--- [Шаг 6/6] ГОТОВО! ---"
echo "Сайт должен быть доступен по адресу: https://$DOMAIN"
echo "Проверьте статус сервера командой: sudo pm2 status"
